{"version":3,"file":"pangu.js","sources":["../../src/browser/pangu.ts"],"sourcesContent":["import { Pangu } from '../shared';\n\nfunction once<T extends (...args: any[]) => any>(func: T): T {\n  let executed = false;\n  return function(this: any, ...args: Parameters<T>) {\n    if (executed) {\n      return;\n    }\n    executed = true;\n    return func.apply(this, args);\n  } as T;\n}\n\nfunction debounce<T extends (...args: any[]) => any>(\n  func: T,\n  delay: number,\n  mustRunDelay: number = Infinity\n): T {\n  let timer: number | null = null;\n  let startTime: number | null = null;\n  \n  return function(this: any, ...args: Parameters<T>) {\n    const currentTime = Date.now();\n    \n    if (timer) {\n      clearTimeout(timer);\n    }\n    \n    if (!startTime) {\n      startTime = currentTime;\n    }\n    \n    if (currentTime - startTime >= mustRunDelay) {\n      func.apply(this, args);\n      startTime = currentTime;\n    } else {\n      timer = window.setTimeout(() => {\n        func.apply(this, args);\n      }, delay);\n    }\n  } as T;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n\nexport class BrowserPangu extends Pangu {\n  blockTags: RegExp;\n  ignoredTags: RegExp;\n  presentationalTags: RegExp;\n  spaceLikeTags: RegExp;\n  spaceSensitiveTags: RegExp;\n  isAutoSpacingPageExecuted: boolean;\n\n  constructor() {\n    super();\n\n    this.blockTags = /^(div|p|h1|h2|h3|h4|h5|h6)$/i;\n    this.ignoredTags = /^(script|code|pre|textarea)$/i;\n    this.presentationalTags = /^(b|code|del|em|i|s|strong|kbd)$/i;\n    this.spaceLikeTags = /^(br|hr|i|img|pangu)$/i;\n    this.spaceSensitiveTags = /^(a|del|pre|s|strike|u)$/i;\n    this.isAutoSpacingPageExecuted = false;\n\n    // TODO\n    // this.ignoredTags adds iframe|pangu\n    // this.ignoreClasses\n    // this.ignoreAttributes\n  }\n\n  isContentEditable(node: any): boolean {\n    return ((node.isContentEditable) || (node.getAttribute && node.getAttribute('g_editable') === 'true'));\n  }\n\n  isSpecificTag(node: any, tagRegex: RegExp): boolean {\n    return (node && node.nodeName && node.nodeName.search(tagRegex) >= 0);\n  }\n\n  isInsideSpecificTag(node: any, tagRegex: RegExp, checkCurrent = false): boolean {\n    let currentNode = node;\n    if (checkCurrent) {\n      if (this.isSpecificTag(currentNode, tagRegex)) {\n        return true;\n      }\n    }\n    while (currentNode.parentNode) {\n      currentNode = currentNode.parentNode;\n      if (this.isSpecificTag(currentNode, tagRegex)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  canIgnoreNode(node: Node): boolean {\n    let currentNode = node;\n    if (currentNode && (this.isSpecificTag(currentNode, this.ignoredTags) || this.isContentEditable(currentNode))) {\n      return true;\n    }\n    while (currentNode.parentNode) {\n      currentNode = currentNode.parentNode;\n      if (currentNode && (this.isSpecificTag(currentNode, this.ignoredTags) || this.isContentEditable(currentNode))) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isFirstTextChild(parentNode: Node, targetNode: Node): boolean {\n    const { childNodes } = parentNode;\n\n    // 只判斷第一個含有 text 的 node\n    for (let i = 0; i < childNodes.length; i++) {\n      const childNode = childNodes[i];\n      if (childNode.nodeType !== Node.COMMENT_NODE && childNode.textContent) {\n        return childNode === targetNode;\n      }\n    }\n    return false;\n  }\n\n  isLastTextChild(parentNode: Node, targetNode: Node): boolean {\n    const { childNodes } = parentNode;\n\n    // 只判斷倒數第一個含有 text 的 node\n    for (let i = childNodes.length - 1; i > -1; i--) {\n      const childNode = childNodes[i];\n      if (childNode.nodeType !== Node.COMMENT_NODE && childNode.textContent) {\n        return childNode === targetNode;\n      }\n    }\n    return false;\n  }\n\n  spacingNodeByXPath(xPathQuery: string, contextNode: Node): void {\n    if (!(contextNode instanceof Node) || (contextNode instanceof DocumentFragment)) {\n      return;\n    }\n\n    // 因為 xPathQuery 會是用 text() 結尾，所以這些 nodes 會是 text 而不是 DOM element\n    // snapshotLength 要配合 XPathResult.ORDERED_NODE_SNAPSHOT_TYPE 使用\n    // https://developer.mozilla.org/en-US/docs/DOM/document.evaluate\n    // https://developer.mozilla.org/en-US/docs/Web/API/XPathResult\n    const textNodes = document.evaluate(xPathQuery, contextNode, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);\n\n    let currentTextNode;\n    let nextTextNode;\n\n    // 從最下面、最裡面的節點開始，所以是倒序的\n    for (let i = textNodes.snapshotLength - 1; i > -1; --i) {\n      currentTextNode = textNodes.snapshotItem(i);\n\n      if (this.isSpecificTag(currentTextNode.parentNode, this.presentationalTags) && !this.isInsideSpecificTag(currentTextNode.parentNode, this.ignoredTags)) {\n        const elementNode = currentTextNode.parentNode;\n\n        if (elementNode.previousSibling) {\n          const { previousSibling } = elementNode;\n          if (previousSibling.nodeType === Node.TEXT_NODE) {\n            const testText = previousSibling.data.substr(-1) + currentTextNode.data.toString().charAt(0);\n            const testNewText = this.spacingSync(testText);\n            if (testText !== testNewText) {\n              previousSibling.data = `${previousSibling.data} `;\n            }\n          }\n        }\n\n        if (elementNode.nextSibling) {\n          const { nextSibling } = elementNode;\n          if (nextSibling.nodeType === Node.TEXT_NODE) {\n            const testText = currentTextNode.data.substr(-1) + nextSibling.data.toString().charAt(0);\n            const testNewText = this.spacingSync(testText);\n            if (testText !== testNewText) {\n              nextSibling.data = ` ${nextSibling.data}`;\n            }\n          }\n        }\n      }\n\n      if (this.canIgnoreNode(currentTextNode)) {\n        nextTextNode = currentTextNode;\n        continue;\n      }\n\n      const newText = this.spacingSync(currentTextNode.data);\n      if (currentTextNode.data !== newText) {\n        currentTextNode.data = newText;\n      }\n\n      // 處理嵌套的 <tag> 中的文字\n      if (nextTextNode) {\n        // TODO\n        // 現在只是簡單地判斷相鄰的下一個 node 是不是 <br>\n        // 萬一遇上嵌套的標籤就不行了\n        if (currentTextNode.nextSibling && currentTextNode.nextSibling.nodeName.search(this.spaceLikeTags) >= 0) {\n          nextTextNode = currentTextNode;\n          continue;\n        }\n\n        // currentTextNode 的最後一個字 + nextTextNode 的第一個字\n        const testText = currentTextNode.data.toString().substr(-1) + nextTextNode.data.toString().substr(0, 1);\n        const testNewText = this.spacingSync(testText);\n        if (testNewText !== testText) {\n          // 往上找 nextTextNode 的 parent node\n          // 直到遇到 spaceSensitiveTags\n          // 而且 nextTextNode 必須是第一個 text child\n          // 才能把空格加在 nextTextNode 的前面\n          let nextNode = nextTextNode;\n          while (nextNode.parentNode && nextNode.nodeName.search(this.spaceSensitiveTags) === -1 && this.isFirstTextChild(nextNode.parentNode, nextNode)) {\n            nextNode = nextNode.parentNode;\n          }\n\n          let currentNode = currentTextNode;\n          while (currentNode.parentNode && currentNode.nodeName.search(this.spaceSensitiveTags) === -1 && this.isLastTextChild(currentNode.parentNode, currentNode)) {\n            currentNode = currentNode.parentNode;\n          }\n\n          if (currentNode.nextSibling) {\n            if (currentNode.nextSibling.nodeName.search(this.spaceLikeTags) >= 0) {\n              nextTextNode = currentTextNode;\n              continue;\n            }\n          }\n\n          if (currentNode.nodeName.search(this.blockTags) === -1) {\n            if (nextNode.nodeName.search(this.spaceSensitiveTags) === -1) {\n              if ((nextNode.nodeName.search(this.ignoredTags) === -1) && (nextNode.nodeName.search(this.blockTags) === -1)) {\n                if (nextTextNode.previousSibling) {\n                  if (nextTextNode.previousSibling.nodeName.search(this.spaceLikeTags) === -1) {\n                    nextTextNode.data = ` ${nextTextNode.data}`;\n                  }\n                } else {\n                  // dirty hack\n                  if (!this.canIgnoreNode(nextTextNode)) {\n                    nextTextNode.data = ` ${nextTextNode.data}`;\n                  }\n                }\n              }\n            } else if (currentNode.nodeName.search(this.spaceSensitiveTags) === -1) {\n              currentTextNode.data = `${currentTextNode.data} `;\n            } else {\n              const panguSpace = document.createElement('pangu');\n              panguSpace.innerHTML = ' ';\n\n              // 避免一直被加空格\n              if (nextNode.previousSibling) {\n                if (nextNode.previousSibling.nodeName.search(this.spaceLikeTags) === -1) {\n                  nextNode.parentNode.insertBefore(panguSpace, nextNode);\n                }\n              } else {\n                nextNode.parentNode.insertBefore(panguSpace, nextNode);\n              }\n\n              // TODO\n              // 主要是想要避免在元素（通常都是 <li>）的開頭加空格\n              // 這個做法有點蠢，但是不管還是先硬上\n              if (!panguSpace.previousElementSibling) {\n                if (panguSpace.parentNode) {\n                  panguSpace.parentNode.removeChild(panguSpace);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      nextTextNode = currentTextNode;\n    }\n  }\n\n  spacingNodeSync(contextNode: Node): void {\n    let xPathQuery = './/*/text()[normalize-space(.)]';\n    if (contextNode instanceof Element && contextNode.children && contextNode.children.length === 0) {\n      xPathQuery = './/text()[normalize-space(.)]';\n    }\n    this.spacingNodeByXPath(xPathQuery, contextNode);\n  }\n\n  async spacingNode(contextNode: Node): Promise<void> {\n    return this.spacingNodeSync(contextNode);\n  }\n\n  spacingElementByIdSync(idName: string): void {\n    const xPathQuery = `id(\"${idName}\")//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  async spacingElementById(idName: string): Promise<void> {\n    return this.spacingElementByIdSync(idName);\n  }\n\n  spacingElementByClassNameSync(className: string): void {\n    const xPathQuery = `//*[contains(concat(\" \", normalize-space(@class), \" \"), \"${className}\")]//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  async spacingElementByClassName(className: string): Promise<void> {\n    return this.spacingElementByClassNameSync(className);\n  }\n\n  spacingElementByTagNameSync(tagName: string): void {\n    const xPathQuery = `//${tagName}//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  async spacingElementByTagName(tagName: string): Promise<void> {\n    return this.spacingElementByTagNameSync(tagName);\n  }\n\n  spacingPageTitleSync(): void {\n    const xPathQuery = '/html/head/title/text()';\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  async spacingPageTitle(): Promise<void> {\n    return this.spacingPageTitleSync();\n  }\n\n  spacingPageBodySync(): void {\n    // // >> 任意位置的節點\n    // . >> 當前節點\n    // .. >> 父節點\n    // [] >> 條件\n    // text() >> 節點的文字內容，例如 hello 之於 <tag>hello</tag>\n    // https://www.w3schools.com/xml/xpath_syntax.asp\n    //\n    // [@contenteditable]\n    // 帶有 contenteditable 屬性的節點\n    //\n    // normalize-space(.)\n    // 當前節點的頭尾的空白字元都會被移除，大於兩個以上的空白字元會被置換成單一空白\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/normalize-space\n    //\n    // name(..)\n    // 父節點的名稱\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/name\n    //\n    // translate(string, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\")\n    // 將 string 轉換成小寫，因為 XML 是 case-sensitive 的\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/translate\n    //\n    // 1. 處理 <title>\n    // 2. 處理 <body> 底下的節點\n    // 3. 略過 contentEditable 的節點\n    // 4. 略過特定節點，例如 <script> 和 <style>\n    //\n    // 注意，以下的 query 只會取出各節點的 text 內容！\n    let xPathQuery = '/html/body//*/text()[normalize-space(.)]';\n    ['script', 'style', 'textarea'].forEach((tag) => {\n      // 理論上這幾個 tag 裡面不會包含其他 tag\n      // 所以可以直接用 .. 取父節點\n      // ex: [translate(name(..), \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\") != \"script\"]\n      xPathQuery = `${xPathQuery}[translate(name(..),\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\"abcdefghijklmnopqrstuvwxyz\")!=\"${tag}\"]`;\n    });\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  async spacingPageBody(): Promise<void> {\n    return this.spacingPageBodySync();\n  }\n\n  spacingPageSync(): void {\n    this.spacingPageTitleSync();\n    this.spacingPageBodySync();\n  }\n\n  async spacingPage(): Promise<void> {\n    await this.spacingPageTitle();\n    await this.spacingPageBody();\n  }\n\n  autoSpacingPage(pageDelay = 1000, nodeDelay = 500, nodeMaxWait = 2000): void {\n    if (!(document.body instanceof Node)) {\n      return;\n    }\n\n    if (this.isAutoSpacingPageExecuted) {\n      return;\n    }\n    this.isAutoSpacingPageExecuted = true;\n\n    const onceSpacingPage = once(() => {\n      this.spacingPageSync();\n    });\n\n    // TODO\n    // this is a dirty hack for https://github.com/vinta/pangu.js/issues/117\n    const videos = document.getElementsByTagName('video');\n    if (videos.length === 0) {\n      setTimeout(() => {\n        onceSpacingPage();\n      }, pageDelay);\n    } else {\n      for (let i = 0; i < videos.length; i++) {\n        const video = videos[i];\n        if (video.readyState === 4) {\n          setTimeout(() => {\n            onceSpacingPage();\n          }, 3000);\n          break;\n        }\n        video.addEventListener('loadeddata', () => {\n          setTimeout(() => {\n            onceSpacingPage();\n          }, 4000);\n        });\n      }\n    }\n\n    const queue: Node[] = [];\n\n    // it's possible that multiple workers process the queue at the same time\n    const self = this;\n    const debouncedSpacingNodes = debounce(() => {\n      // a single node could be very big which contains a lot of child nodes\n      while (queue.length) {\n        const node = queue.shift();\n        if (node) {\n          self.spacingNodeSync(node);\n        }\n      }\n    }, nodeDelay, nodeMaxWait);\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n    const mutationObserver = new MutationObserver((mutations) => {\n      // Element: https://developer.mozilla.org/en-US/docs/Web/API/Element\n      // Text: https://developer.mozilla.org/en-US/docs/Web/API/Text\n      mutations.forEach((mutation) => {\n        switch (mutation.type) { /* eslint-disable indent */\n          case 'childList':\n            mutation.addedNodes.forEach((node) => {\n              if (node.nodeType === Node.ELEMENT_NODE) {\n                queue.push(node);\n              } else if (node.nodeType === Node.TEXT_NODE && node.parentNode) {\n                queue.push(node.parentNode);\n              }\n            });\n            break;\n          case 'characterData':\n            const { target: node } = mutation;\n            if (node.nodeType === Node.TEXT_NODE && node.parentNode) {\n              queue.push(node.parentNode);\n            }\n            break;\n          default:\n            break;\n        }\n      });\n\n      debouncedSpacingNodes();\n    });\n    mutationObserver.observe(document.body, {\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n  }\n}\n\n// Create default instance\nexport const pangu = new BrowserPangu();\n\n// Default export\nexport default pangu;\n"],"names":["once","func","executed","args","debounce","delay","mustRunDelay","timer","startTime","currentTime","BrowserPangu","Pangu","node","tagRegex","checkCurrent","currentNode","parentNode","targetNode","childNodes","i","childNode","xPathQuery","contextNode","textNodes","currentTextNode","nextTextNode","elementNode","previousSibling","testText","testNewText","nextSibling","newText","nextNode","panguSpace","idName","className","tagName","tag","pageDelay","nodeDelay","nodeMaxWait","onceSpacingPage","videos","video","queue","self","debouncedSpacingNodes","mutations","mutation","pangu"],"mappings":"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"}