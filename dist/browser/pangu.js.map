{"version":3,"file":"pangu.js","sources":["../../src/shared/index.ts","../../src/browser/pangu.ts"],"sourcesContent":["// CJK is an acronym for Chinese, Japanese, and Korean.\n//\n// CJK includes the following Unicode blocks:\n// \\u2e80-\\u2eff CJK Radicals Supplement\n// \\u2f00-\\u2fdf Kangxi Radicals\n// \\u3040-\\u309f Hiragana\n// \\u30a0-\\u30ff Katakana\n// \\u3100-\\u312f Bopomofo\n// \\u3200-\\u32ff Enclosed CJK Letters and Months\n// \\u3400-\\u4dbf CJK Unified Ideographs Extension A\n// \\u4e00-\\u9fff CJK Unified Ideographs\n// \\uf900-\\ufaff CJK Compatibility Ideographs\n//\n// For more information about Unicode blocks, see\n// http://unicode-table.com/en/\n// https://github.com/vinta/pangu\n//\n// all J below does not include \\u30fb\nconst CJK = '\\u2e80-\\u2eff\\u2f00-\\u2fdf\\u3040-\\u309f\\u30a0-\\u30fa\\u30fc-\\u30ff\\u3100-\\u312f\\u3200-\\u32ff\\u3400-\\u4dbf\\u4e00-\\u9fff\\uf900-\\ufaff';\n\n// ANS is short for Alphabets, Numbers, and Symbols.\n//\n// A includes A-Za-z\\u0370-\\u03ff\n// N includes 0-9\n// S includes `~!@#$%^&*()-_=+[]{}\\|;:'\",<.>/?\n//\n// some S below does not include all symbols\n\nconst ANY_CJK = new RegExp(`[${CJK}]`);\n\n// the symbol part only includes ~ ! ; : , . ? but . only matches one character\nconst CONVERT_TO_FULLWIDTH_CJK_SYMBOLS_CJK = new RegExp(`([${CJK}])[ ]*([\\\\:]+|\\\\.)[ ]*([${CJK}])`, 'g');\nconst CONVERT_TO_FULLWIDTH_CJK_SYMBOLS = new RegExp(`([${CJK}])[ ]*([~\\\\!;,\\\\?]+)[ ]*`, 'g');\nconst DOTS_CJK = new RegExp(`([\\\\.]{2,}|\\u2026)([${CJK}])`, 'g');\nconst FIX_CJK_COLON_ANS = new RegExp(`([${CJK}])\\\\:([A-Z0-9\\\\(\\\\)])`, 'g');\n\n// the symbol part does not include '\nconst CJK_QUOTE = new RegExp(`([${CJK}])([\\`\"\\u05f4])`, 'g');\nconst QUOTE_CJK = new RegExp(`([\\`\"\\u05f4])([${CJK}])`, 'g');\nconst FIX_QUOTE_ANY_QUOTE = /([`\"\\u05f4]+)[ ]*(.+?)[ ]*([`\"\\u05f4]+)/g;\n\n// Handle curly quotes with alphanumeric characters\n// These patterns should only apply to curly quotes, not straight quotes\n// Straight quotes are already handled by CJK_QUOTE, QUOTE_CJK and FIX_QUOTE_ANY_QUOTE\nconst QUOTE_AN = /([\\u201d])([A-Za-z0-9])/g;  // Only closing curly quotes + AN\n\n// Special handling for straight quotes followed by alphanumeric after CJK\n// This catches patterns like: 社\"DF where the quote appears to be closing a quoted CJK phrase\nconst CJK_QUOTE_AN = new RegExp(`([${CJK}])(\")([A-Za-z0-9])`, 'g');\n\nconst CJK_SINGLE_QUOTE_BUT_POSSESSIVE = new RegExp(`([${CJK}])('[^s])`, 'g');\nconst SINGLE_QUOTE_CJK = new RegExp(`(')([${CJK}])`, 'g');\nconst FIX_POSSESSIVE_SINGLE_QUOTE = new RegExp(`([A-Za-z0-9${CJK}])( )('s)`, 'g');\n\nconst HASH_ANS_CJK_HASH = new RegExp(`([${CJK}])(#)([${CJK}]+)(#)([${CJK}])`, 'g');\nconst CJK_HASH = new RegExp(`([${CJK}])(#([^ ]))`, 'g');\nconst HASH_CJK = new RegExp(`(([^ ])#)([${CJK}])`, 'g');\n\n// the symbol part only includes + - * / = & | < >\nconst CJK_OPERATOR_ANS = new RegExp(`([${CJK}])([\\\\+\\\\-\\\\*\\\\/=&\\\\|<>])([A-Za-z0-9])`, 'g');\nconst ANS_OPERATOR_CJK = new RegExp(`([A-Za-z0-9])([\\\\+\\\\-\\\\*\\\\/=&\\\\|<>])([${CJK}])`, 'g');\n\nconst FIX_SLASH_AS = /([/]) ([a-z\\-_\\./]+)/g;\nconst FIX_SLASH_AS_SLASH = /([/\\.])([A-Za-z\\-_\\./]+) ([/])/g;\n\n// the bracket part only includes ( ) [ ] { } < > “ ”\nconst CJK_LEFT_BRACKET = new RegExp(`([${CJK}])([\\\\(\\\\[\\\\{<>\\u201c])`, 'g');\nconst RIGHT_BRACKET_CJK = new RegExp(`([\\\\)\\\\]\\\\}<>\\u201d])([${CJK}])`, 'g');\nconst FIX_LEFT_BRACKET_ANY_RIGHT_BRACKET = /([\\(\\[\\{<\\u201c]+)[ ]*(.+?)[ ]*([\\)\\]\\}>\\u201d]+)/;\nconst ANS_CJK_LEFT_BRACKET_ANY_RIGHT_BRACKET = new RegExp(`([A-Za-z0-9${CJK}])[ ]*([\\u201c])([A-Za-z0-9${CJK}\\\\-_ ]+)([\\u201d])`, 'g');\nconst LEFT_BRACKET_ANY_RIGHT_BRACKET_ANS_CJK = new RegExp(`([\\u201c])([A-Za-z0-9${CJK}\\\\-_ ]+)([\\u201d])[ ]*([A-Za-z0-9${CJK}])`, 'g');\n\nconst AN_LEFT_BRACKET = /([A-Za-z0-9])([\\(\\[\\{])/g;\nconst RIGHT_BRACKET_AN = /([\\)\\]\\}])([A-Za-z0-9])/g;\n\nconst CJK_ANS = new RegExp(`([${CJK}])([A-Za-z\\u0370-\\u03ff0-9@\\\\$%\\\\^&\\\\*\\\\-\\\\+\\\\\\\\=\\\\|/\\u00a1-\\u00ff\\u2150-\\u218f\\u2700—\\u27bf])`, 'g');\nconst ANS_CJK = new RegExp(`([A-Za-z\\u0370-\\u03ff0-9~\\\\$%\\\\^&\\\\*\\\\-\\\\+\\\\\\\\=\\\\|/!;:,\\\\.\\\\?\\u00a1-\\u00ff\\u2150-\\u218f\\u2700—\\u27bf])([${CJK}])`, 'g');\n\nconst S_A = /(%)([A-Za-z])/g;\n\nconst MIDDLE_DOT = /([ ]*)([\\u00b7\\u2022\\u2027])([ ]*)/g;\n\nexport class Pangu {\n  version: string;\n\n  constructor() {\n    this.version = '4.0.7';\n  }\n\n  convertToFullwidth(symbols: string): string {\n    return symbols\n      .replace(/~/g, '～')\n      .replace(/!/g, '！')\n      .replace(/;/g, '；')\n      .replace(/:/g, '：')\n      .replace(/,/g, '，')\n      .replace(/\\./g, '。')\n      .replace(/\\?/g, '？');\n  }\n\n  spacingSync(text: string): string {\n    if (typeof text !== 'string') {\n      console.warn(`spacing(text) only accepts string but got ${typeof text}`); // eslint-disable-line no-console\n      return text;\n    }\n\n    if (text.length <= 1 || !ANY_CJK.test(text)) {\n      return text;\n    }\n\n    const self = this;\n\n    // DEBUG\n    // String.prototype.rawReplace = String.prototype.replace;\n    // String.prototype.replace = function(regexp, newSubstr) {\n    //   const oldText = this;\n    //   const newText = this.rawReplace(regexp, newSubstr);\n    //   if (oldText !== newText) {\n    //     console.log(`regexp: ${regexp}`);\n    //     console.log(`oldText: ${oldText}`);\n    //     console.log(`newText: ${newText}`);\n    //   }\n    //   return newText;\n    // };\n\n    let newText = text;\n\n    // https://stackoverflow.com/questions/4285472/multiple-regex-replace\n    newText = newText.replace(CONVERT_TO_FULLWIDTH_CJK_SYMBOLS_CJK, (_match, leftCjk, symbols, rightCjk) => {\n      const fullwidthSymbols = self.convertToFullwidth(symbols);\n      return `${leftCjk}${fullwidthSymbols}${rightCjk}`;\n    });\n\n    newText = newText.replace(CONVERT_TO_FULLWIDTH_CJK_SYMBOLS, (_match, cjk, symbols) => {\n      const fullwidthSymbols = self.convertToFullwidth(symbols);\n      return `${cjk}${fullwidthSymbols}`;\n    });\n\n    newText = newText.replace(DOTS_CJK, '$1 $2');\n    newText = newText.replace(FIX_CJK_COLON_ANS, '$1：$2');\n\n    newText = newText.replace(CJK_QUOTE, '$1 $2');\n    newText = newText.replace(QUOTE_CJK, '$1 $2');\n    newText = newText.replace(FIX_QUOTE_ANY_QUOTE, '$1$2$3');\n    \n    // Handle quotes with alphanumeric - closing quotes followed by AN need space\n    newText = newText.replace(QUOTE_AN, '$1 $2');\n    // Opening quotes preceded by AN don't need space (they're handled by other patterns)\n    \n    // Handle CJK followed by closing quote followed by alphanumeric\n    newText = newText.replace(CJK_QUOTE_AN, '$1$2 $3');\n\n    newText = newText.replace(CJK_SINGLE_QUOTE_BUT_POSSESSIVE, '$1 $2');\n    newText = newText.replace(SINGLE_QUOTE_CJK, '$1 $2');\n    newText = newText.replace(FIX_POSSESSIVE_SINGLE_QUOTE, \"$1's\"); // eslint-disable-line quotes\n\n    newText = newText.replace(HASH_ANS_CJK_HASH, '$1 $2$3$4 $5');\n    newText = newText.replace(CJK_HASH, '$1 $2');\n    newText = newText.replace(HASH_CJK, '$1 $3');\n\n    newText = newText.replace(CJK_OPERATOR_ANS, '$1 $2 $3');\n    newText = newText.replace(ANS_OPERATOR_CJK, '$1 $2 $3');\n\n    newText = newText.replace(FIX_SLASH_AS, '$1$2');\n    newText = newText.replace(FIX_SLASH_AS_SLASH, '$1$2$3');\n\n    newText = newText.replace(CJK_LEFT_BRACKET, '$1 $2');\n    newText = newText.replace(RIGHT_BRACKET_CJK, '$1 $2');\n    newText = newText.replace(FIX_LEFT_BRACKET_ANY_RIGHT_BRACKET, '$1$2$3');\n    newText = newText.replace(ANS_CJK_LEFT_BRACKET_ANY_RIGHT_BRACKET, '$1 $2$3$4');\n    newText = newText.replace(LEFT_BRACKET_ANY_RIGHT_BRACKET_ANS_CJK, '$1$2$3 $4');\n\n    newText = newText.replace(AN_LEFT_BRACKET, '$1 $2');\n    newText = newText.replace(RIGHT_BRACKET_AN, '$1 $2');\n\n    newText = newText.replace(CJK_ANS, '$1 $2');\n    newText = newText.replace(ANS_CJK, '$1 $2');\n\n    newText = newText.replace(S_A, '$1 $2');\n\n    newText = newText.replace(MIDDLE_DOT, '・');\n\n    // DEBUG\n    // String.prototype.replace = String.prototype.rawReplace;\n\n    return newText;\n  }\n\n  spacing(text: string): Promise<string>;\n  spacing(text: string, callback: (err: any, result?: string) => void): void;\n  spacing(text: string, callback?: (err: any, result?: string) => void): Promise<string> | void {\n    if (callback) {\n      // Callback mode\n      let newText;\n      try {\n        newText = this.spacingSync(text);\n      } catch (err) {\n        callback(err);\n        return;\n      }\n      callback(null, newText);\n    } else {\n      // Promise mode\n      return new Promise((resolve, reject) => {\n        try {\n          const newText = this.spacingSync(text);\n          resolve(newText);\n        } catch (err) {\n          reject(err);\n        }\n      });\n    }\n  }\n\n  // Deprecated: Use spacing() instead\n  spacingText(text: string): Promise<string>;\n  spacingText(text: string, callback: (err: any, result?: string) => void): void;\n  spacingText(text: string, callback?: (err: any, result?: string) => void): Promise<string> | void {\n    return this.spacing(text, callback as any);\n  }\n\n  spacingTextSync(text: string): string {\n    return this.spacingSync(text);\n  }\n}\n\n// Create default instance\nexport const pangu = new Pangu();\n\n// Default export\nexport default pangu;\n","import { Pangu } from '../shared';\n\nfunction once<T extends (...args: any[]) => any>(func: T): T {\n  let executed = false;\n  return function(this: any, ...args: Parameters<T>) {\n    if (executed) {\n      return;\n    }\n    executed = true;\n    return func.apply(this, args);\n  } as T;\n}\n\nfunction debounce<T extends (...args: any[]) => any>(\n  func: T,\n  delay: number,\n  mustRunDelay: number = Infinity\n): T {\n  let timer: number | null = null;\n  let startTime: number | null = null;\n  \n  return function(this: any, ...args: Parameters<T>) {\n    const currentTime = Date.now();\n    \n    if (timer) {\n      clearTimeout(timer);\n    }\n    \n    if (!startTime) {\n      startTime = currentTime;\n    }\n    \n    if (currentTime - startTime >= mustRunDelay) {\n      func.apply(this, args);\n      startTime = currentTime;\n    } else {\n      timer = window.setTimeout(() => {\n        func.apply(this, args);\n      }, delay);\n    }\n  } as T;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n\nexport class BrowserPangu extends Pangu {\n  blockTags: RegExp;\n  ignoredTags: RegExp;\n  presentationalTags: RegExp;\n  spaceLikeTags: RegExp;\n  spaceSensitiveTags: RegExp;\n  isAutoSpacingPageExecuted: boolean;\n\n  constructor() {\n    super();\n\n    this.blockTags = /^(div|p|h1|h2|h3|h4|h5|h6)$/i;\n    this.ignoredTags = /^(script|code|pre|textarea)$/i;\n    this.presentationalTags = /^(b|code|del|em|i|s|strong|kbd)$/i;\n    this.spaceLikeTags = /^(br|hr|i|img|pangu)$/i;\n    this.spaceSensitiveTags = /^(a|del|pre|s|strike|u)$/i;\n    this.isAutoSpacingPageExecuted = false;\n\n    // TODO\n    // this.ignoredTags adds iframe|pangu\n    // this.ignoreClasses\n    // this.ignoreAttributes\n  }\n\n  isContentEditable(node: any): boolean {\n    return ((node.isContentEditable) || (node.getAttribute && node.getAttribute('g_editable') === 'true'));\n  }\n\n  isSpecificTag(node: any, tagRegex: RegExp): boolean {\n    return (node && node.nodeName && node.nodeName.search(tagRegex) >= 0);\n  }\n\n  isInsideSpecificTag(node: any, tagRegex: RegExp, checkCurrent = false): boolean {\n    let currentNode = node;\n    if (checkCurrent) {\n      if (this.isSpecificTag(currentNode, tagRegex)) {\n        return true;\n      }\n    }\n    while (currentNode.parentNode) {\n      currentNode = currentNode.parentNode;\n      if (this.isSpecificTag(currentNode, tagRegex)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  canIgnoreNode(node: Node): boolean {\n    let currentNode = node;\n    if (currentNode && (this.isSpecificTag(currentNode, this.ignoredTags) || this.isContentEditable(currentNode))) {\n      return true;\n    }\n    while (currentNode.parentNode) {\n      currentNode = currentNode.parentNode;\n      if (currentNode && (this.isSpecificTag(currentNode, this.ignoredTags) || this.isContentEditable(currentNode))) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isFirstTextChild(parentNode: Node, targetNode: Node): boolean {\n    const { childNodes } = parentNode;\n\n    // 只判斷第一個含有 text 的 node\n    for (let i = 0; i < childNodes.length; i++) {\n      const childNode = childNodes[i];\n      if (childNode.nodeType !== Node.COMMENT_NODE && childNode.textContent) {\n        return childNode === targetNode;\n      }\n    }\n    return false;\n  }\n\n  isLastTextChild(parentNode: Node, targetNode: Node): boolean {\n    const { childNodes } = parentNode;\n\n    // 只判斷倒數第一個含有 text 的 node\n    for (let i = childNodes.length - 1; i > -1; i--) {\n      const childNode = childNodes[i];\n      if (childNode.nodeType !== Node.COMMENT_NODE && childNode.textContent) {\n        return childNode === targetNode;\n      }\n    }\n    return false;\n  }\n\n  spacingNodeByXPath(xPathQuery: string, contextNode: Node): void {\n    if (!(contextNode instanceof Node) || (contextNode instanceof DocumentFragment)) {\n      return;\n    }\n\n    // 因為 xPathQuery 會是用 text() 結尾，所以這些 nodes 會是 text 而不是 DOM element\n    // snapshotLength 要配合 XPathResult.ORDERED_NODE_SNAPSHOT_TYPE 使用\n    // https://developer.mozilla.org/en-US/docs/DOM/document.evaluate\n    // https://developer.mozilla.org/en-US/docs/Web/API/XPathResult\n    const textNodes = document.evaluate(xPathQuery, contextNode, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);\n\n    let currentTextNode;\n    let nextTextNode;\n\n    // 從最下面、最裡面的節點開始，所以是倒序的\n    for (let i = textNodes.snapshotLength - 1; i > -1; --i) {\n      currentTextNode = textNodes.snapshotItem(i);\n\n      if (this.isSpecificTag(currentTextNode.parentNode, this.presentationalTags) && !this.isInsideSpecificTag(currentTextNode.parentNode, this.ignoredTags)) {\n        const elementNode = currentTextNode.parentNode;\n\n        if (elementNode.previousSibling) {\n          const { previousSibling } = elementNode;\n          if (previousSibling.nodeType === Node.TEXT_NODE) {\n            const testText = previousSibling.data.substr(-1) + currentTextNode.data.toString().charAt(0);\n            const testNewText = this.spacingSync(testText);\n            if (testText !== testNewText) {\n              previousSibling.data = `${previousSibling.data} `;\n            }\n          }\n        }\n\n        if (elementNode.nextSibling) {\n          const { nextSibling } = elementNode;\n          if (nextSibling.nodeType === Node.TEXT_NODE) {\n            const testText = currentTextNode.data.substr(-1) + nextSibling.data.toString().charAt(0);\n            const testNewText = this.spacingSync(testText);\n            if (testText !== testNewText) {\n              nextSibling.data = ` ${nextSibling.data}`;\n            }\n          }\n        }\n      }\n\n      if (this.canIgnoreNode(currentTextNode)) {\n        nextTextNode = currentTextNode;\n        continue;\n      }\n\n      const newText = this.spacingSync(currentTextNode.data);\n      if (currentTextNode.data !== newText) {\n        currentTextNode.data = newText;\n      }\n\n      // 處理嵌套的 <tag> 中的文字\n      if (nextTextNode) {\n        // TODO\n        // 現在只是簡單地判斷相鄰的下一個 node 是不是 <br>\n        // 萬一遇上嵌套的標籤就不行了\n        if (currentTextNode.nextSibling && currentTextNode.nextSibling.nodeName.search(this.spaceLikeTags) >= 0) {\n          nextTextNode = currentTextNode;\n          continue;\n        }\n\n        // currentTextNode 的最後一個字 + nextTextNode 的第一個字\n        const testText = currentTextNode.data.toString().substr(-1) + nextTextNode.data.toString().substr(0, 1);\n        const testNewText = this.spacingSync(testText);\n        if (testNewText !== testText) {\n          // 往上找 nextTextNode 的 parent node\n          // 直到遇到 spaceSensitiveTags\n          // 而且 nextTextNode 必須是第一個 text child\n          // 才能把空格加在 nextTextNode 的前面\n          let nextNode = nextTextNode;\n          while (nextNode.parentNode && nextNode.nodeName.search(this.spaceSensitiveTags) === -1 && this.isFirstTextChild(nextNode.parentNode, nextNode)) {\n            nextNode = nextNode.parentNode;\n          }\n\n          let currentNode = currentTextNode;\n          while (currentNode.parentNode && currentNode.nodeName.search(this.spaceSensitiveTags) === -1 && this.isLastTextChild(currentNode.parentNode, currentNode)) {\n            currentNode = currentNode.parentNode;\n          }\n\n          if (currentNode.nextSibling) {\n            if (currentNode.nextSibling.nodeName.search(this.spaceLikeTags) >= 0) {\n              nextTextNode = currentTextNode;\n              continue;\n            }\n          }\n\n          if (currentNode.nodeName.search(this.blockTags) === -1) {\n            if (nextNode.nodeName.search(this.spaceSensitiveTags) === -1) {\n              if ((nextNode.nodeName.search(this.ignoredTags) === -1) && (nextNode.nodeName.search(this.blockTags) === -1)) {\n                if (nextTextNode.previousSibling) {\n                  if (nextTextNode.previousSibling.nodeName.search(this.spaceLikeTags) === -1) {\n                    nextTextNode.data = ` ${nextTextNode.data}`;\n                  }\n                } else {\n                  // dirty hack\n                  if (!this.canIgnoreNode(nextTextNode)) {\n                    nextTextNode.data = ` ${nextTextNode.data}`;\n                  }\n                }\n              }\n            } else if (currentNode.nodeName.search(this.spaceSensitiveTags) === -1) {\n              currentTextNode.data = `${currentTextNode.data} `;\n            } else {\n              const panguSpace = document.createElement('pangu');\n              panguSpace.innerHTML = ' ';\n\n              // 避免一直被加空格\n              if (nextNode.previousSibling) {\n                if (nextNode.previousSibling.nodeName.search(this.spaceLikeTags) === -1) {\n                  nextNode.parentNode.insertBefore(panguSpace, nextNode);\n                }\n              } else {\n                nextNode.parentNode.insertBefore(panguSpace, nextNode);\n              }\n\n              // TODO\n              // 主要是想要避免在元素（通常都是 <li>）的開頭加空格\n              // 這個做法有點蠢，但是不管還是先硬上\n              if (!panguSpace.previousElementSibling) {\n                if (panguSpace.parentNode) {\n                  panguSpace.parentNode.removeChild(panguSpace);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      nextTextNode = currentTextNode;\n    }\n  }\n\n  spacingNodeSync(contextNode: Node): void {\n    let xPathQuery = './/*/text()[normalize-space(.)]';\n    if (contextNode instanceof Element && contextNode.children && contextNode.children.length === 0) {\n      xPathQuery = './/text()[normalize-space(.)]';\n    }\n    this.spacingNodeByXPath(xPathQuery, contextNode);\n  }\n\n  async spacingNode(contextNode: Node): Promise<void> {\n    return this.spacingNodeSync(contextNode);\n  }\n\n  spacingElementByIdSync(idName: string): void {\n    const xPathQuery = `id(\"${idName}\")//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  async spacingElementById(idName: string): Promise<void> {\n    return this.spacingElementByIdSync(idName);\n  }\n\n  spacingElementByClassNameSync(className: string): void {\n    const xPathQuery = `//*[contains(concat(\" \", normalize-space(@class), \" \"), \"${className}\")]//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  async spacingElementByClassName(className: string): Promise<void> {\n    return this.spacingElementByClassNameSync(className);\n  }\n\n  spacingElementByTagNameSync(tagName: string): void {\n    const xPathQuery = `//${tagName}//text()`;\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  async spacingElementByTagName(tagName: string): Promise<void> {\n    return this.spacingElementByTagNameSync(tagName);\n  }\n\n  spacingPageTitleSync(): void {\n    const xPathQuery = '/html/head/title/text()';\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  async spacingPageTitle(): Promise<void> {\n    return this.spacingPageTitleSync();\n  }\n\n  spacingPageBodySync(): void {\n    // // >> 任意位置的節點\n    // . >> 當前節點\n    // .. >> 父節點\n    // [] >> 條件\n    // text() >> 節點的文字內容，例如 hello 之於 <tag>hello</tag>\n    // https://www.w3schools.com/xml/xpath_syntax.asp\n    //\n    // [@contenteditable]\n    // 帶有 contenteditable 屬性的節點\n    //\n    // normalize-space(.)\n    // 當前節點的頭尾的空白字元都會被移除，大於兩個以上的空白字元會被置換成單一空白\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/normalize-space\n    //\n    // name(..)\n    // 父節點的名稱\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/name\n    //\n    // translate(string, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\")\n    // 將 string 轉換成小寫，因為 XML 是 case-sensitive 的\n    // https://developer.mozilla.org/en-US/docs/Web/XPath/Functions/translate\n    //\n    // 1. 處理 <title>\n    // 2. 處理 <body> 底下的節點\n    // 3. 略過 contentEditable 的節點\n    // 4. 略過特定節點，例如 <script> 和 <style>\n    //\n    // 注意，以下的 query 只會取出各節點的 text 內容！\n    let xPathQuery = '/html/body//*/text()[normalize-space(.)]';\n    ['script', 'style', 'textarea'].forEach((tag) => {\n      // 理論上這幾個 tag 裡面不會包含其他 tag\n      // 所以可以直接用 .. 取父節點\n      // ex: [translate(name(..), \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\") != \"script\"]\n      xPathQuery = `${xPathQuery}[translate(name(..),\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\"abcdefghijklmnopqrstuvwxyz\")!=\"${tag}\"]`;\n    });\n    this.spacingNodeByXPath(xPathQuery, document);\n  }\n\n  async spacingPageBody(): Promise<void> {\n    return this.spacingPageBodySync();\n  }\n\n  spacingPageSync(): void {\n    this.spacingPageTitleSync();\n    this.spacingPageBodySync();\n  }\n\n  async spacingPage(): Promise<void> {\n    await this.spacingPageTitle();\n    await this.spacingPageBody();\n  }\n\n  autoSpacingPage(pageDelay = 1000, nodeDelay = 500, nodeMaxWait = 2000): void {\n    if (!(document.body instanceof Node)) {\n      return;\n    }\n\n    if (this.isAutoSpacingPageExecuted) {\n      return;\n    }\n    this.isAutoSpacingPageExecuted = true;\n\n    const onceSpacingPage = once(() => {\n      this.spacingPageSync();\n    });\n\n    // TODO\n    // this is a dirty hack for https://github.com/vinta/pangu.js/issues/117\n    const videos = document.getElementsByTagName('video');\n    if (videos.length === 0) {\n      setTimeout(() => {\n        onceSpacingPage();\n      }, pageDelay);\n    } else {\n      for (let i = 0; i < videos.length; i++) {\n        const video = videos[i];\n        if (video.readyState === 4) {\n          setTimeout(() => {\n            onceSpacingPage();\n          }, 3000);\n          break;\n        }\n        video.addEventListener('loadeddata', () => {\n          setTimeout(() => {\n            onceSpacingPage();\n          }, 4000);\n        });\n      }\n    }\n\n    const queue: Node[] = [];\n\n    // it's possible that multiple workers process the queue at the same time\n    const self = this;\n    const debouncedSpacingNodes = debounce(() => {\n      // a single node could be very big which contains a lot of child nodes\n      while (queue.length) {\n        const node = queue.shift();\n        if (node) {\n          self.spacingNodeSync(node);\n        }\n      }\n    }, nodeDelay, nodeMaxWait);\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n    const mutationObserver = new MutationObserver((mutations) => {\n      // Element: https://developer.mozilla.org/en-US/docs/Web/API/Element\n      // Text: https://developer.mozilla.org/en-US/docs/Web/API/Text\n      mutations.forEach((mutation) => {\n        switch (mutation.type) { /* eslint-disable indent */\n          case 'childList':\n            mutation.addedNodes.forEach((node) => {\n              if (node.nodeType === Node.ELEMENT_NODE) {\n                queue.push(node);\n              } else if (node.nodeType === Node.TEXT_NODE && node.parentNode) {\n                queue.push(node.parentNode);\n              }\n            });\n            break;\n          case 'characterData':\n            const { target: node } = mutation;\n            if (node.nodeType === Node.TEXT_NODE && node.parentNode) {\n              queue.push(node.parentNode);\n            }\n            break;\n          default:\n            break;\n        }\n      });\n\n      debouncedSpacingNodes();\n    });\n    mutationObserver.observe(document.body, {\n      characterData: true,\n      childList: true,\n      subtree: true,\n    });\n  }\n}\n\n// Create default instance\nexport const pangu = new BrowserPangu();\n\n// Default export\nexport default pangu;\n"],"names":["CJK","ANY_CJK","CONVERT_TO_FULLWIDTH_CJK_SYMBOLS_CJK","CONVERT_TO_FULLWIDTH_CJK_SYMBOLS","DOTS_CJK","FIX_CJK_COLON_ANS","CJK_QUOTE","QUOTE_CJK","FIX_QUOTE_ANY_QUOTE","QUOTE_AN","CJK_QUOTE_AN","CJK_SINGLE_QUOTE_BUT_POSSESSIVE","SINGLE_QUOTE_CJK","FIX_POSSESSIVE_SINGLE_QUOTE","HASH_ANS_CJK_HASH","CJK_HASH","HASH_CJK","CJK_OPERATOR_ANS","ANS_OPERATOR_CJK","FIX_SLASH_AS","FIX_SLASH_AS_SLASH","CJK_LEFT_BRACKET","RIGHT_BRACKET_CJK","FIX_LEFT_BRACKET_ANY_RIGHT_BRACKET","ANS_CJK_LEFT_BRACKET_ANY_RIGHT_BRACKET","LEFT_BRACKET_ANY_RIGHT_BRACKET_ANS_CJK","AN_LEFT_BRACKET","RIGHT_BRACKET_AN","CJK_ANS","ANS_CJK","S_A","MIDDLE_DOT","Pangu","symbols","text","self","newText","_match","leftCjk","rightCjk","fullwidthSymbols","cjk","callback","err","resolve","reject","once","func","executed","args","debounce","delay","mustRunDelay","timer","startTime","currentTime","BrowserPangu","node","tagRegex","checkCurrent","currentNode","parentNode","targetNode","childNodes","i","childNode","xPathQuery","contextNode","textNodes","currentTextNode","nextTextNode","elementNode","previousSibling","testText","testNewText","nextSibling","nextNode","panguSpace","__async","idName","className","tagName","tag","pageDelay","nodeDelay","nodeMaxWait","onceSpacingPage","videos","video","queue","debouncedSpacingNodes","mutations","mutation","pangu"],"mappings":"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"}